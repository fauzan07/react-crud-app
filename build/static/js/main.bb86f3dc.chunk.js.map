{"version":3,"sources":["common/Loader/assets/loader.gif","components/Sidebar/userimg.png","config/Fire.js","common/Loader/Loader.js","context/Auth.js","components/Sidebar/Sidebar.js","pages/Home/Home.js","common/Backdrop/Backdrop.js","common/Modal/Modal.js","pages/Posts/Post.js","pages/LoginRegister/LoginRegister.js","common/guards/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","require","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","database","Loader","className","src","Spinner","alt","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","Provider","value","withRouter","useContext","id","type","onClick","$","toggleClass","Usericon","width","email","exact","to","signOut","Home","props","Backdrop","style","Modal","close","modalCloseHandler","this","content","Component","Post","month","showModal","setShowModal","showDetails","setShowDetails","postTitle","setPostTitle","postDescription","setPostDescription","scheduleDate","setScheduleDate","formComplete","setFormComplete","formIncompleteError","setFormIncompleteError","postName","setPostName","postDetail","setPostDetail","postDate","setPostDate","postData","setPostData","isPostAdded","setIsPostAdded","isPostDelete","setIsPostDelete","isPostEdited","setIsPostEdited","editDetails","setEditDetails","postId","setPostId","postTitles","useRef","postDescriptions","scheduleDates","userId","uid","today","Date","day","getMonth","getDate","date","getFullYear","getPostData","Axios","get","then","response","data","catch","error","console","log","modalContent","color","htmlFor","defaultValue","placeholder","ref","onChange","event","target","min","disabled","e","current","length","put","alert","post","showmodalContent","scope","Object","entries","map","item","key","onPostClick","aria-hidden","window","confirm","delete","handleDelete","setEmail","password","setPassword","formTitle","setFormTitle","fireErrors","setFireErrors","loginBtn","setLoginBtn","getAction","action","errorNotification","role","submitBtn","preventDefault","signInWithEmailAndPassword","message","createUserWithEmailAndPassword","login_register","name","PrivateRoute","RouteComponent","component","rest","render","routeProps","App","path","LoginRegister","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb86f3dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.f90ea624.gif\";","module.exports = __webpack_public_path__ + \"static/media/userimg.2cab1ed4.png\";","import firebase from 'firebase';\nrequire(\"firebase/database\");\nrequire(\"firebase/auth\");\n\nconst config = {\n    apiKey: \"AIzaSyAqabJPvk4ExIGTRDNkNWTrPjbK2KawvbU\",\n    authDomain: \"react-crud-e02cf.firebaseapp.com\",\n    databaseURL: \"https://react-crud-e02cf.firebaseio.com\",\n    projectId: \"react-crud-e02cf\",\n    storageBucket: \"react-crud-e02cf.appspot.com\",\n    messagingSenderId: \"34461049850\",\n    appId: \"1:34461049850:web:3267d8e9c328ae4e3e7a43\"\n};\n\nconst fire = firebase.initializeApp(config);\n\nexport const auth = firebase.auth;\nexport const db = firebase.database();\n\nexport default fire;","import React from 'react';\nimport Spinner from './assets/loader.gif';\n\n\nfunction Loader() {\n    return (\n       \n        <div className=\"text-center spinner\">\n        <img src={Spinner} alt=\"loading\"/>\n        </div>\n        \n    )\n}\n\nexport default Loader;\n","import React, { useEffect, useState } from 'react';\nimport fire from '../config/Fire';\nimport  Loader  from '../common/Loader/Loader';\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fire.auth().onAuthStateChanged(user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n  }, []);\n\n\n  if(loading){\n    return <Loader />\n  }\n\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, {useContext} from 'react';\nimport {NavLink , withRouter } from \"react-router-dom\";\nimport $ from \"jquery\";\nimport fire from '../../config/Fire';\nimport { AuthContext } from '../../context/Auth';\nimport './Sidebar.css';\nimport Usericon from './userimg.png';\n\nconst Sidebar=()=> {\n  const { currentUser } = useContext(AuthContext);\n  const tooglesidebar=()=>\n  {\n    $('#sidebar').toggleClass('active');\n  }\n\n  return (\n  \n      <>\n        {currentUser ? (\n\t\t    <nav id=\"sidebar\">\n\t\t\t\t<div className=\"custom-menu\">\n\t\t\t\t\t<button type=\"button\" id=\"sidebarCollapse\" onClick={tooglesidebar} className=\"btn btn-primary d-md-none d-sm-block\"></button>\n        </div>\n\t  \t\t<div className=\"img bg-wrap text-center py-4\">\n\t  \t\t\t<div className=\"user-logo\">\n          <div className=\"text-center Usericon mb-3\">\n            <img src={Usericon} width=\"140\" alt=\"icon\"/>\n          </div>\n            <h1 className=\"text-center\">{currentUser.email}</h1>\n\t  \t\t\t</div>\n\t  \t\t</div>\n       \n        <ul className=\"list-unstyled components mb-5\">\n          <li>\n            <NavLink exact to=\"/\" className=\"bg-dark\"><span className=\"fa fa-home mr-3\"></span>Home</NavLink>\n          </li>\n          <li>\n          <NavLink to=\"./Post\" className=\"bg-dark\"><span className=\"fa fa-pencil mr-3\"></span>Posts</NavLink>\n          </li>\n          <li>\n           <a className=\"bg-dark\" onClick={()=>fire.auth().signOut()}><span className=\"fa fa-sign-out mr-3\"></span> Sign Out</a>\n          </li>\n        </ul>\n      </nav>\n      ) : (\n      <div></div>\n       \n      )}\n      </>\n  );\n  \n}\n\n\nexport default withRouter(Sidebar);\n","import React, { useState, useEffect } from 'react';\nimport fire from '../../config/Fire';\nimport Sidebar from \"../../components/Sidebar/Sidebar\";\n\n\n\nfunction Home(props) {\n\n// const logout = () => {\n//     fire.auth().signOut();\n// }\n\n  return(\n    <div className=\"wrapper d-flex align-items-stretch\">\n    <Sidebar />\n    <div className=\"container py-5\">\n        <div className=\"row justify-content-center\">\n            <div className=\"col-md-10\">\n               <h1 className=\"text-center\">Welcome to home</h1>\n               <div className=\"text-center py-5\">\n               {/* <button className=\"btn btn-primary\" onClick={logout}>LogOut</button> */}\n               </div>\n            </div>\n        </div>\n\n    </div>\n    </div>\n  \n  );\n\n}\n\nexport default Home;\n","import React from 'react';\n\nconst Backdrop = () => {\n    return (\n        <div style={{'width':'100%', 'height': '100%', 'backgroundColor': 'rgba(0,0,0,0.5)', 'zIndex': 100, 'position':'fixed','left': 0,'top': 0}}></div>\n    )\n}\n\nexport default Backdrop;","import React, { Component } from 'react';\nimport './Modal.css';\n\nimport Backdrop from './../Backdrop/Backdrop';\n\nclass Modal extends Component {\n    \n    render() {\n      \n        return (\n            <div>\n                <Backdrop />\n                <div className=\"modalbody\">\n                <button className=\"closebutton\" onClick = {() => this.props.close(this.props.modalCloseHandler)}>X</button>\n                    {this.props.content}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Modal;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport  \"./Post.css\";\nimport Modal from './../../common/Modal/Modal';\nimport Sidebar from \"../../components/Sidebar/Sidebar\";\nimport Axios from \"axios\";\nimport { AuthContext } from '../../context/Auth';\n\n\nfunction Post(props) {\n  const { currentUser } = useContext(AuthContext);\n\n  const [showModal, setShowModal] = useState(false);\n  const [showDetails, setShowDetails] = useState(false);\n  const [postTitle, setPostTitle] = useState(\"\");\n  const [postDescription, setPostDescription] = useState(\"\");\n  const [scheduleDate, setScheduleDate] = useState(\"\");\n  const [formComplete, setFormComplete] = useState(false);\n  const [formIncompleteError, setFormIncompleteError] = useState(false);\n\n  const [postName, setPostName] = useState(\"\");\n  const [postDetail, setPostDetail] = useState(\"\");\n  const [postDate, setPostDate] = useState(\"\");\n\n  const [postData, setPostData] = useState(\"\");\n  const [isPostAdded, setIsPostAdded] = useState(false);\n  const [isPostDelete, setIsPostDelete] = useState(false);\n  const [isPostEdited, setIsPostEdited] = useState(false);\n\n  const [editDetails, setEditDetails] = useState(false);\n  const [postId, setPostId] = useState(\"\");\n\n  const postTitles  = React.useRef();\n  const postDescriptions  = React.useRef();\n  const scheduleDates  = React.useRef();\n\n  const userId = currentUser.uid;\n \n    // to Hide past date\n    var today = new Date();\n    var month,\n      day = null;\n    if (today.getMonth() < 10 || today.getDate() < 10) {\n      month = \"0\" + (today.getMonth() + 1);\n      day = \"0\" + today.getDate();\n    }\n    var date = today.getFullYear() + \"-\" + month + \"-\" + day;\n\n    useEffect(() => {\n      setIsPostAdded(false);\n      setIsPostDelete(false);\n      setIsPostEdited(false);\n      getPostData(currentUser.email);\n    }, [isPostAdded, isPostDelete, isPostEdited, currentUser]);\n\n    const getPostData = (email) => {\n      Axios\n      .get(`https://react-crud-e02cf.firebaseio.com/post/${userId}.json`)\n      .then((response) => {\n        setPostData(response.data)\n        // setPostData(Object.entries(response.data).filter((e)=>(e.user === email)));\n        // console.log(response);\n      })\n      .catch((error) => console.log(error));\n  };\n  \n//  to Add and Edit cardData in DB\nconst handleAddPostData = (e) => {\n  //   check if all input is taken\n  if(postTitles.current.value.length === 0 || postDescriptions.current.value.length === 0  || scheduleDates.current.value.length === 0 ){\n    setFormComplete(false);\n    setFormIncompleteError(true);\n  } else {\n    // if user wants to edit then put request is used\n    if (editDetails) {\n      Axios\n      .put(`https://react-crud-e02cf.firebaseio.com/post/${userId}/${postId}.json`,\n        {\n          postName: postName === \"\" ? postTitle : postName,\n          postDetail: postDetail === \"\" ? postDescription : postDetail,\n          postDate: postDate === \"\" ? scheduleDate : postDate,\n          user: currentUser.email,\n        }\n      )\n        .then((response) => {\n          alert(\"post edited succesfully\");\n          setIsPostEdited(true);\n        })\n        .catch((error) => console.log(\"Error in editDetails\" + error));\n    }\n    //  if user wants to add a new card\n    else {\n      Axios\n      .post(`https://react-crud-e02cf.firebaseio.com/post/${userId}.json`,\n        {\n          postName: postName,\n          postDetail: postDetail,\n          postDate: postDate,\n          user: currentUser.email,\n        }\n      )\n        .then((response) => {\n          alert(\"post added succesfully\");\n          setIsPostAdded(true);\n        })\n        .catch((error) => console.log(\"Error\" + error));\n    }\n\n    setShowModal(false);\n    setEditDetails(false);\n\n    setPostName(\"\");\n    setPostDetail(\"\");\n    setPostDate(\"\");\n  }\n};\n\n  // on click of card this function shows details\n  const onPostClick = (\n    postTitle,\n    postDescription,\n    scheduleDate,\n    postId,\n    e\n  ) => {\n    setShowDetails(true);\n\n    setPostTitle(postTitle);\n    setPostDescription(postDescription);\n    setScheduleDate(scheduleDate);\n    setPostId(postId);\n  };\n\n   // handles edit button click\n const handleEdit = (e) => {\n  setShowDetails(false);\n  setShowModal(true);\n  setEditDetails(true);\n};\n\n\n\n  // handles archive on card archive click\n  const handleDelete = (postId, e) => {\n    if (window.confirm(\"Are you sure you want to delete the Post?\")) {\n    Axios\n    .delete(`https://react-crud-e02cf.firebaseio.com/post/${userId}/${postId}.json`)\n      .then((response) => {\n        alert(\"post deleted succesfully\");\n        setIsPostDelete(true);\n      })\n      .catch((error) => console.log(\"Error\" + error));\n    }\n  };\n\n\n\n  const  modalCloseHandler = () => { setShowModal(false); setEditDetails(false);};\n\n  const  showmodalCloseHandler = () => {setShowDetails(false)};\n\n  //modal of Add and Edit Card\n  let modalContent = showModal ? \n\n  (\n      <>\n    <div className=\"container py-4\">\n      <div className=\"row\">\n        <div className=\"col-md-12 text-left\">\n          <h3>{editDetails ? 'Edit Post' : 'Add Post'}</h3>\n          {formIncompleteError ? <p style={{color : 'red'}}>Kindly complete the form before adding Column</p> : null}\n        <div className=\"form-group\">\n          <label htmlFor=\"postTitle\">Post Title</label>\n          <input type=\"text\" id=\"post_title\" defaultValue={editDetails ? postTitle : \"\"} placeholder=\"Enter a post title\" ref={postTitles} onChange={(event) => setPostName(event.target.value)} className=\"form-control\"/>\n        </div> \n        <div className=\"form-group\">\n          <label htmlFor=\"postDescription\">Post Description</label>\n          <input type=\"text\" id=\"post_description\" defaultValue={editDetails ? postDescription : \"\"} placeholder=\"Enter a post Description\" ref={postDescriptions} onChange={(event) => setPostDetail(event.target.value)} className=\"form-control\"/>\n        </div> \n        <div className=\"form-group\">\n          <label htmlFor=\"schedule\">Schedule Date</label>\n          <input type=\"date\" id=\"schedule_date\" min={date} defaultValue={editDetails ? scheduleDate : \"\"} ref={scheduleDates} onChange={(event) => setPostDate(event.target.value)} className=\"form-control\"/>\n        </div>\n        <button disabled={formComplete} className=\"btn btn-info\" onClick={handleAddPostData}>{editDetails ? 'Edit Post' : 'Add Post'}</button>\n        </div>\n      </div>\n    </div>\n\n  \n      </>\n  )\n  :null;\n\n  //modal of show card details\n  let showmodalContent = showDetails ? \n\n  (\n      <>\n  <div className=\"container my-4\">\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n          <div className=\"d-flex justify-content-between\">\n            <h2 className=\"text-left\">View Post</h2>\n            <button type=\"button\" id=\"editBtn\" className=\"btn btn-info\" onClick={handleEdit}>Edit Post</button>\n          </div>\n          <hr/>\n          <div className=\"text-left my-4\">\n            <h4>Post Title</h4>\n            <h6>{postTitle}</h6>\n          </div>\n          <div className=\"text-left my-4\">\n            <h4>Post Description</h4>\n            <h6>{postDescription}</h6>\n          </div>\n          <div className=\"text-left my-4\">\n            <h4>Post Date</h4>\n            <h6>{scheduleDate}</h6>\n          </div>\n      </div>\n      </div>\n      </div>\n      </>\n     \n  )\n  :null;\n\n  return (\n    <div className=\"wrapper d-flex align-items-stretch\">\n    <Sidebar />\n    <div className=\"container py-3 post-data\">\n      <h2>Posts</h2>\n      <button className=\"btn btn-dark mt-4\" onClick={() => setShowModal(true)}>Add Post</button>\n      <div className=\"post-table my-5\">\n      <table className=\"table table-striped table-hover table-dark\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Post Title</th>\n          <th scope=\"col\">Post Description</th>\n          <th scope=\"col\">Schedule date</th>\n          <th scope=\"col\">Action</th>\n        </tr>\n      </thead>\n      <tbody>\n      {postData ?\n        Object.entries(postData).map((item) => (\n        <tr>\n          <td key={item[0]}>{item[1].postName}</td>\n          <td>{item[1].postDetail}</td>\n          <td>{item[1].postDate}</td>\n          <td>\n            <button  id={item[0]} value={item[1].postName} onClick={(e) =>\n                  onPostClick(\n                    item[1].postName,\n                    item[1].postDetail,\n                    item[1].postDate,\n                    item[0],\n                    e\n                  )\n                } className=\"btn btn-success btn-sm\"><i className=\"fa fa-eye\" aria-hidden=\"true\"></i></button>\n                <button type=\"button\"  id={item[0]}  onClick={(e) => handleDelete(item[0], e)} className=\"btn btn-danger btn-sm ml-2\"><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></button></td>\n        </tr>\n        ) ) : <span className=\"noTaskAdded p-5\">No tasks added</span>}\n      </tbody>\n    </table>\n      </div>\n        <br />\n        {showModal && (\n        \n            <Modal  \n                content = {modalContent}\n                close = {modalCloseHandler}/> \n        )}\n       \n       {showDetails && (\n        \n        <Modal  \n            content = {showmodalContent}\n            close = {showmodalCloseHandler}/> \n    )}\n\n    </div>\n    </div>\n\n\n   \n)\n}\n\nexport default Post;\n","import React, { useState, useContext } from 'react';\nimport fire from '../../config/Fire';\nimport { AuthContext } from '../../context/Auth';\nimport { withRouter, Redirect, Link } from 'react-router-dom';\nimport './LoginRegister.css';\n\n\nfunction LoginRegister(props) {\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [formTitle, setFormTitle] = useState('Login');\n  const [fireErrors, setFireErrors] = useState(\"\");\n  const [loginBtn, setLoginBtn] = useState(true);\n\n\n  const login = (event) => {\n    event.preventDefault();\n    fire.auth().signInWithEmailAndPassword(email, password)\n     .catch((error) => {\n        setFireErrors(error.message)\n     })\n  }\n\n  const register = (event) => {\n    event.preventDefault();\n    fire.auth().createUserWithEmailAndPassword(email, password)\n     .catch((error) => {\n        setFireErrors(error.message)\n     })\n  }\n\n  const getAction = action => {\n      if(action === 'reg'){\n            setFormTitle('Register New User');\n            setLoginBtn(false);\n            setFireErrors('');\n      }else{\n            setFormTitle('Login');\n            setLoginBtn(true);\n            setFireErrors('');\n      }\n  }\n\n  const { currentUser } = useContext(AuthContext);\n\n  if (currentUser) {\n    return <Redirect to=\"/\" />;\n  }\n\n  \n  \n\n  let errorNotification = fireErrors ? \n  (<div className=\"alert alert-danger\" role=\"alert\">{fireErrors}</div>) : null;\n\n  let submitBtn = loginBtn ?\n  (<button  type=\"submit\" className=\"loginBtn btn btn-success\" onClick={login} >Enter</button>) :\n  (<button  type=\"submit\" className=\"loginBtn btn btn-success\" onClick={register} >Register</button>);\n\n  let login_register = loginBtn ? \n  (<button  className=\"loginBtn btn btn-primary float-right\" onClick={() => getAction('reg')}>Register</button>) :\n  (<button  className=\"loginBtn btn btn-primary float-right\" onClick={() => getAction('login')}>Login</button>);\n\n  return(\n    <div className=\"authentication\">\n    <div className=\"container py-5\">\n        <div className=\"row justify-content-center\">\n            <div className=\"col-md-6 col-lg-6\">\n            <h1 className=\"title\">REACT CRUD DASHBOARD</h1>\n                <div className=\"mt-5 px-5 py-5 bg-white border shadow-lg rounded signup-box\">\n                <h2 className=\"text-center\">{formTitle}</h2>\n                <div>{errorNotification}</div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email address</label>\n                        <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" value={email} placeholder=\"Enter a email\" onChange={(event) => setEmail(event.target.value)}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" value={password} placeholder=\"Enter a password\" onChange={(event) => setPassword(event.target.value)}/>\n                    </div>\n                    {submitBtn}\n                    {login_register}\n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n  );\n\n}\n\nexport default withRouter(LoginRegister);\n","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from '../../context/Auth';\n\nconst PrivateRoute = ({ component: RouteComponent, children, ...rest }) => {\n  const { currentUser } = useContext(AuthContext);\n  return (\n    <Route\n      {...rest}\n      render={routeProps =>\n        !!currentUser ? (\n          <RouteComponent {...routeProps} />\n        ) : (\n          <Redirect to={'/LoginRegister'} />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from \"./pages/Home/Home\";\nimport Post from \"./pages/Posts/Post\";\nimport LoginRegister from \"./pages/LoginRegister/LoginRegister\";\nimport { AuthProvider } from './context/Auth';\nimport PrivateRoute from './common/guards/PrivateRoute';\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={Home} />\n          <PrivateRoute path='/Post' component={Post} />\n          <Route path=\"/LoginRegister\" component={LoginRegister} />\n          <Route exact path=\"*\" component={Home} />\n        </Switch>\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}