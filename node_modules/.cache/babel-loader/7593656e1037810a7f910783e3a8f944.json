{"ast":null,"code":"var _jsxFileName = \"/home/wws/Desktop/react-crud-app/src/pages/Posts/Post.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./Post.css\";\nimport Modal from './../../common/Modal/Modal';\nimport Sidebar from \"../../components/Sidebar/Sidebar\";\nimport Axios from \"axios\";\n\nfunction Home(props) {\n  const [showModal, setShowModal] = useState(false); // const [showDetails, setShowDetails] = useState(false);\n\n  const [postTitle, setPostTitle] = useState(\"\");\n  const [postDescription, setPostDescription] = useState(\"\");\n  const [scheduleDate, setScheduleDate] = useState(\"\");\n  const [formComplete, setFormComplete] = useState(false);\n  const [formIncompleteError, setFormIncompleteError] = useState(false);\n  const [postName, setPostName] = useState(\"\");\n  const [postDetail, setPostDetail] = useState(\"\");\n  const [postDate, setPostDate] = useState(\"\");\n  const [postData, setPostData] = useState(\"\");\n  const [isPostAdded, setIsPostAdded] = useState(false);\n  const [isPostDelete, setIsPostDelete] = useState(false);\n  const [isPostEdited, setIsPostEdited] = useState(false);\n  const [editDetails, setEditDetails] = useState(false);\n  const postTitles = React.useRef();\n  const postDescriptions = React.useRef();\n  const scheduleDates = React.useRef(); // to Hide past date\n\n  var today = new Date();\n  var month,\n      day = null;\n\n  if (today.getMonth() < 10 || today.getDate() < 10) {\n    month = \"0\" + (today.getMonth() + 1);\n    day = \"0\" + today.getDate();\n  }\n\n  var date = today.getFullYear() + \"-\" + month + \"-\" + day;\n  useEffect(() => {\n    setIsPostAdded(false);\n    setIsPostDelete(false);\n    setIsPostEdited(false);\n    getPostData();\n  }, [isPostAdded, isPostDelete, isPostEdited]);\n\n  const getPostData = () => {\n    Axios.get(`https://react-crud-e02cf.firebaseio.com/post.json`).then(response => {\n      setPostData(response.data);\n    }).catch(error => console.log(error));\n  }; //  to Add and Edit cardData in DB\n\n\n  const handleAddPostData = e => {\n    //   check if all input is taken\n    if (postTitles.current.value.length === 0 || postDescriptions.current.value.length === 0 || scheduleDates.current.value.length === 0) {\n      setFormComplete(false);\n      setFormIncompleteError(true);\n    } else {\n      // if user wants to edit then put request is used\n      if (editDetails) {\n        Axios.put(`https://react-crud-e02cf.firebaseio.com/post.json`, {\n          postName: postName === \"\" ? postTitle : postName,\n          postDetail: postDetail === \"\" ? postDescription : postDetail,\n          postDate: postDate === \"\" ? scheduleDate : postDate\n        }).then(response => {\n          alert(\"post edited succesfully\");\n          setIsPostEdited(true);\n        }).catch(error => console.log(\"Error in editDetails\" + error));\n      } //  if user wants to add a new card\n      else {\n          Axios.post(`https://react-crud-e02cf.firebaseio.com/post.json`, {\n            postName: postName,\n            postDetail: postDetail,\n            postDate: postDate\n          }).then(response => {\n            alert(\"post added succesfully\");\n            setIsPostAdded(true);\n          }).catch(error => console.log(\"Error\" + error));\n        }\n\n      setShowModal(false);\n      setEditDetails(false);\n      setPostName(\"\");\n      setPostDetail(\"\");\n      setPostDate(\"\");\n    }\n  }; // handles edit button click\n\n\n  const handleEdit = e => {\n    // setShowDetails(false);\n    setShowModal(true);\n    setEditDetails(true);\n  }; // handles archive on card archive click\n\n\n  const handleDelete = e => {\n    Axios.delete(`https://react-crud-e02cf.firebaseio.com/post.json`).then(response => {\n      alert(\"post deleted succesfully\");\n      setIsPostDelete(true);\n    }).catch(error => console.log(\"Error\" + error)); // setShowDetails(false);\n  };\n\n  const modalCloseHandler = () => {\n    setShowModal(false);\n  }; // const  showmodalCloseHandler = () => {setShowDetails(false)};\n  //modal of Add and Edit Card\n\n\n  let modalContent = showModal ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, editDetails ? 'Edit Post' : 'Add Post'), formIncompleteError ? /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 34\n    }\n  }, \"Kindly complete the form before adding Column\") : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"postTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, \"Post Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"post_title\",\n    defaultValue: editDetails ? postTitle : \"\",\n    placeholder: \"Enter a post title\",\n    ref: postTitles,\n    onChange: event => setPostTitle(event.target.value),\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"postDescription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, \"Post Description\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"post_description\",\n    defaultValue: editDetails ? postDescription : \"\",\n    placeholder: \"Enter a post Description\",\n    ref: postDescriptions,\n    onChange: event => setPostDescription(event.target.value),\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"schedule\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, \"Schedule Date\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    id: \"schedule_date\",\n    min: date,\n    defaultValue: editDetails ? scheduleDate : \"\",\n    placeholder: \"Enter a column name\",\n    ref: scheduleDates,\n    onChange: event => setScheduleDate(event.target.value),\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: formComplete,\n    className: \"btn btn-info\",\n    onClick: handleAddPostData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, editDetails ? 'Edit Post' : 'Add Post'))))) : null; // //modal of show card details\n  // let showmodalContent = showDetails ? \n  // (\n  //     <>\n  //   <div className=\"container py-4\">\n  //     <div className=\"row\">\n  //       <div className=\"col-md-12 text-left\">\n  //         <h3>Edit Post</h3>\n  //       <div className=\"form-group\">\n  //         <label for=\"postTitle\">Post Title</label>\n  //         <input type=\"text\" className=\"form-control\"/>\n  //       </div> \n  //       <div class=\"form-group\">       \n  //           <label for=\"attach_img\">Attach Image</label>\n  //             <div class=\"custom-file mb-3\">\n  //             <input type=\"file\" class=\"custom-file-input\" id=\"attach_img\" name=\"attach_img\"/>\n  //             <label class=\"custom-file-label\" for=\"attach_img\">Choose file</label>\n  //       </div>\n  //       </div>\n  //       <div className=\"form-group\">\n  //         <label for=\"schedule\">Schedule Date</label>\n  //         <input type=\"date\" className=\"form-control\"/>\n  //       </div>\n  //       <button type=\"submit\" className=\"btn btn-success\">Edit Post</button>\n  //       </div>\n  //     </div>\n  //   </div>\n  //     </>\n  // )\n  // :null;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper d-flex align-items-stretch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container py-3 post-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }, \"Posts\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-dark mt-4\",\n    onClick: () => setShowModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }, \"Add Post\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-table my-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-striped table-hover table-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }, \"Post Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, \"Post Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, \"Schedule date\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, postData ? Object.entries(postData).map(item => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }, postName), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, postDetail), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, postDate), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleEdit,\n    class: \"btn btn-info btn-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-pencil\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 86\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleDelete,\n    class: \"btn btn-danger btn-sm ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 142\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-trash\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 222\n    }\n  }))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"noTaskAdded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }, \"No tasks added\")))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }\n  }), showModal && /*#__PURE__*/React.createElement(Modal, {\n    content: modalContent,\n    close: modalCloseHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  })));\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/wws/Desktop/react-crud-app/src/pages/Posts/Post.js"],"names":["React","useState","useEffect","Modal","Sidebar","Axios","Home","props","showModal","setShowModal","postTitle","setPostTitle","postDescription","setPostDescription","scheduleDate","setScheduleDate","formComplete","setFormComplete","formIncompleteError","setFormIncompleteError","postName","setPostName","postDetail","setPostDetail","postDate","setPostDate","postData","setPostData","isPostAdded","setIsPostAdded","isPostDelete","setIsPostDelete","isPostEdited","setIsPostEdited","editDetails","setEditDetails","postTitles","useRef","postDescriptions","scheduleDates","today","Date","month","day","getMonth","getDate","date","getFullYear","getPostData","get","then","response","data","catch","error","console","log","handleAddPostData","e","current","value","length","put","alert","post","handleEdit","handleDelete","delete","modalCloseHandler","modalContent","color","event","target","Object","entries","map","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport  \"./Post.css\";\nimport Modal from './../../common/Modal/Modal';\nimport Sidebar from \"../../components/Sidebar/Sidebar\";\nimport Axios from \"axios\";\n\nfunction Home(props) {\n  const [showModal, setShowModal] = useState(false);\n  // const [showDetails, setShowDetails] = useState(false);\n  const [postTitle, setPostTitle] = useState(\"\");\n  const [postDescription, setPostDescription] = useState(\"\");\n  const [scheduleDate, setScheduleDate] = useState(\"\");\n  const [formComplete, setFormComplete] = useState(false);\n  const [formIncompleteError, setFormIncompleteError] = useState(false);\n\n  const [postName, setPostName] = useState(\"\");\n  const [postDetail, setPostDetail] = useState(\"\");\n  const [postDate, setPostDate] = useState(\"\");\n\n  const [postData, setPostData] = useState(\"\");\n  const [isPostAdded, setIsPostAdded] = useState(false);\n  const [isPostDelete, setIsPostDelete] = useState(false);\n  const [isPostEdited, setIsPostEdited] = useState(false);\n\n  const [editDetails, setEditDetails] = useState(false);\n\n  const postTitles  = React.useRef();\n  const postDescriptions  = React.useRef();\n  const scheduleDates  = React.useRef();\n\n\n    // to Hide past date\n    var today = new Date();\n    var month,\n      day = null;\n    if (today.getMonth() < 10 || today.getDate() < 10) {\n      month = \"0\" + (today.getMonth() + 1);\n      day = \"0\" + today.getDate();\n    }\n    var date = today.getFullYear() + \"-\" + month + \"-\" + day;\n\n    useEffect(() => {\n      setIsPostAdded(false);\n      setIsPostDelete(false);\n      setIsPostEdited(false);\n      getPostData();\n    }, [isPostAdded, isPostDelete, isPostEdited]);\n\n    const getPostData = () => {\n      Axios\n      .get(`https://react-crud-e02cf.firebaseio.com/post.json`)\n      .then((response) => {\n        setPostData(response.data);\n      })\n      .catch((error) => console.log(error));\n  };\n  \n//  to Add and Edit cardData in DB\nconst handleAddPostData = (e) => {\n  //   check if all input is taken\n  if(postTitles.current.value.length === 0 || postDescriptions.current.value.length === 0  || scheduleDates.current.value.length === 0 ){\n    setFormComplete(false);\n    setFormIncompleteError(true);\n  } else {\n    // if user wants to edit then put request is used\n    if (editDetails) {\n      Axios\n      .put(`https://react-crud-e02cf.firebaseio.com/post.json`,\n        {\n          postName: postName === \"\" ? postTitle : postName,\n          postDetail: postDetail === \"\" ? postDescription : postDetail,\n          postDate: postDate === \"\" ? scheduleDate : postDate,\n        }\n      )\n        .then((response) => {\n          alert(\"post edited succesfully\");\n          setIsPostEdited(true);\n        })\n        .catch((error) => console.log(\"Error in editDetails\" + error));\n    }\n    //  if user wants to add a new card\n    else {\n      Axios\n      .post(`https://react-crud-e02cf.firebaseio.com/post.json`,\n        {\n          postName: postName,\n          postDetail: postDetail,\n          postDate: postDate,\n        }\n      )\n        .then((response) => {\n          alert(\"post added succesfully\");\n          setIsPostAdded(true);\n        })\n        .catch((error) => console.log(\"Error\" + error));\n    }\n\n    setShowModal(false);\n    setEditDetails(false);\n\n    setPostName(\"\");\n    setPostDetail(\"\");\n    setPostDate(\"\");\n  }\n};\n\n // handles edit button click\n const handleEdit = (e) => {\n  // setShowDetails(false);\n  setShowModal(true);\n  setEditDetails(true);\n};\n\n\n  // handles archive on card archive click\n  const handleDelete = (e) => {\n    Axios\n    .delete(`https://react-crud-e02cf.firebaseio.com/post.json`)\n      .then((response) => {\n        alert(\"post deleted succesfully\");\n        setIsPostDelete(true);\n      })\n      .catch((error) => console.log(\"Error\" + error));\n\n    // setShowDetails(false);\n  };\n\n\n\n  const  modalCloseHandler = () => { setShowModal(false);};\n\n  // const  showmodalCloseHandler = () => {setShowDetails(false)};\n\n  //modal of Add and Edit Card\n  let modalContent = showModal ? \n\n  (\n      <>\n    <div className=\"container py-4\">\n      <div className=\"row\">\n        <div className=\"col-md-12 text-left\">\n          <h3>{editDetails ? 'Edit Post' : 'Add Post'}</h3>\n          {formIncompleteError ? <p style={{color : 'red'}}>Kindly complete the form before adding Column</p> : null}\n        <div className=\"form-group\">\n          <label for=\"postTitle\">Post Title</label>\n          <input type=\"text\" id=\"post_title\" defaultValue={editDetails ? postTitle : \"\"} placeholder=\"Enter a post title\" ref={postTitles} onChange={(event) => setPostTitle(event.target.value)} className=\"form-control\"/>\n        </div> \n        <div className=\"form-group\">\n          <label for=\"postDescription\">Post Description</label>\n          <input type=\"text\" id=\"post_description\" defaultValue={editDetails ? postDescription : \"\"} placeholder=\"Enter a post Description\" ref={postDescriptions} onChange={(event) => setPostDescription(event.target.value)} className=\"form-control\"/>\n        </div> \n        <div className=\"form-group\">\n          <label for=\"schedule\">Schedule Date</label>\n          <input type=\"date\" id=\"schedule_date\" min={date} defaultValue={editDetails ? scheduleDate : \"\"} placeholder=\"Enter a column name\" ref={scheduleDates} onChange={(event) => setScheduleDate(event.target.value)} className=\"form-control\"/>\n        </div>\n        <button disabled={formComplete} className=\"btn btn-info\" onClick={handleAddPostData}>{editDetails ? 'Edit Post' : 'Add Post'}</button>\n        </div>\n      </div>\n    </div>\n\n  \n      </>\n  )\n  :null;\n\n  // //modal of show card details\n  // let showmodalContent = showDetails ? \n\n  // (\n  //     <>\n\n  //   <div className=\"container py-4\">\n  //     <div className=\"row\">\n  //       <div className=\"col-md-12 text-left\">\n  //         <h3>Edit Post</h3>\n  //       <div className=\"form-group\">\n  //         <label for=\"postTitle\">Post Title</label>\n  //         <input type=\"text\" className=\"form-control\"/>\n  //       </div> \n  //       <div class=\"form-group\">       \n  //           <label for=\"attach_img\">Attach Image</label>\n  //             <div class=\"custom-file mb-3\">\n  //             <input type=\"file\" class=\"custom-file-input\" id=\"attach_img\" name=\"attach_img\"/>\n  //             <label class=\"custom-file-label\" for=\"attach_img\">Choose file</label>\n  //       </div>\n  //       </div>\n  //       <div className=\"form-group\">\n  //         <label for=\"schedule\">Schedule Date</label>\n  //         <input type=\"date\" className=\"form-control\"/>\n  //       </div>\n  //       <button type=\"submit\" className=\"btn btn-success\">Edit Post</button>\n  //       </div>\n  //     </div>\n  //   </div>\n\n  //     </>\n  // )\n  // :null;\n\n  return (\n    <div className=\"wrapper d-flex align-items-stretch\">\n    <Sidebar />\n    <div className=\"container py-3 post-data\">\n      <h2>Posts</h2>\n      <button className=\"btn btn-dark mt-4\" onClick={() => setShowModal(true)}>Add Post</button>\n      <div className=\"post-table my-5\">\n      <table className=\"table table-striped table-hover table-dark\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Post Title</th>\n          <th scope=\"col\">Post Description</th>\n          <th scope=\"col\">Schedule date</th>\n          <th scope=\"col\">Action</th>\n        </tr>\n      </thead>\n      <tbody>\n      {postData ?\n        Object.entries(postData).map((item) => (\n        <tr>\n          <td>{postName}</td>\n          <td>{postDetail}</td>\n          <td>{postDate}</td>\n          <td><button type=\"button\" onClick={handleEdit} class=\"btn btn-info btn-sm\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></button><button type=\"button\" onClick={handleDelete} class=\"btn btn-danger btn-sm ml-2\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></button></td>\n        </tr>\n        ) ) : <div className=\"noTaskAdded\">No tasks added</div>}\n      </tbody>\n    </table>\n      </div>\n        <br />\n        {showModal && (\n        \n            <Modal  \n                content = {modalContent}\n                close = {modalCloseHandler}/> \n        )}\n       \n       {/* {showDetails && (\n        \n        <Modal  \n            content = {showmodalContent}\n            close = {showmodalCloseHandler}/> \n    )} */}\n\n    </div>\n    </div>\n   \n)\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}